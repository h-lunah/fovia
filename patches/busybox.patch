--- a/scripts/kconfig/lxdialog/check-lxdialog.sh
+++ b/scripts/kconfig/lxdialog/check-lxdialog.sh
@@ -47,7 +47,7 @@ trap "rm -f $tmp" 0 1 2 3 15
 check() {
         $cc -x c - -o $tmp 2>/dev/null <<'EOF'
 #include CURSES_LOC
-main() {}
+int main() {}
 EOF
 	if [ $? != 0 ]; then
 	    echo " *** Unable to find the ncurses libraries or the"       1>&2
--- a/include/dump.h
+++ b/include/dump.h
@@ -16,7 +16,7 @@ PUSH_AND_SET_FUNCTION_VISIBILITY_TO_HIDDEN
 #define	F_UINT		0x200		/* %[ouXx] */
 #define	F_TEXT		0x400		/* no conversions */
 
-enum dump_vflag_t { ALL, DUP, FIRST, WAIT };	/* -v values */
+enum dump_vflag_t { ALL, DUP, FIRST, WAIT, FROM_BUFFER };	/* -v values */
 
 typedef struct PR {
 	struct PR *nextpr;		/* next print unit */
--- a/libbb/dump.c
+++ b/libbb/dump.c
@@ -376,7 +376,13 @@ static unsigned char *get(priv_dumper_t *dumper)
 	int need, nread;
 	int blocksize = dumper->blocksize;
 
-	if (!dumper->get__curp) {
+	if (dumper->pub.dump_vflag == FROM_BUFFER) {
+		unsigned char *tmp = (unsigned char *) *dumper->argv;
+		if (tmp)
+			++dumper->argv;
+		dumper->pub.address = (off_t)0;
+		return tmp;
+	} else if (!dumper->get__curp) {
 		dumper->pub.address = (off_t)0; /*DBU:[dave@cray.com] initialize,initialize..*/
 		dumper->get__curp = xmalloc(blocksize);
 		dumper->get__savp = xzalloc(blocksize); /* need to be initialized */
--- /dev/null
+++ b/miscutils/mcookie.c
@@ -0,0 +1,54 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * mcookie implementation for busybox
+ *
+ * Copyright (C) 2012 Bernhard Reutner-Fischer
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ *
+ * Generate a 128-bit random hexadecimal number for use with the
+ * Xauthority system.  Typical usage:
+ *   xauth add :0 . `mcookie`
+ *   xauth add :0 . `dd if=/dev/urandom bs=16 count=1 2>/dev/null | hexdump -e '"%08x"'`
+ */
+
+//config:config MCOOKIE
+//config:	bool "mcookie"
+//config:	default y
+//config:	help
+//config:	  generate magic cookies for xauth
+
+//applet:IF_MCOOKIE(APPLET(mcookie, BB_DIR_USR_BIN, BB_SUID_DROP))
+
+//kbuild:lib-$(CONFIG_MCOOKIE) += mcookie.o
+
+//usage:#define mcookie_trivial_usage
+//usage:       ""
+//usage:#define mcookie_full_usage "\n\n"
+//usage:       "Generate magic cookies for xauth"
+//usage:
+//usage:#define mcookie_example_usage
+//usage:       "xauth add :0 . `mcookie`"
+
+#include "libbb.h"
+#include "dump.h"
+
+int mcookie_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int mcookie_main(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
+{
+	char buf[16];
+	char *fakeargs[2] = {buf,};
+	const char *dump_fmt = "\"\" 8/2 \"%04x\" \"\n\"";
+	dumper_t *dumper = alloc_dumper();
+# ifdef ENABLE_FEATURE_MCOOKIE_FALLBACK
+	ssize_t bytes =
+#endif
+		open_read_close("/dev/urandom", &buf, sizeof(buf));
+# ifdef ENABLE_FEATURE_MCOOKIE_FALLBACK
+	if (bytes < 0)
+		bytes = open_read_close("/dev/random", &buf, sizeof(buf));
+# endif
+	bb_dump_add(dumper, dump_fmt);
+	dumper->dump_vflag = FROM_BUFFER;
+	return bb_dump_dump(dumper, fakeargs);
+}
